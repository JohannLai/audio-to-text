name: Opened or edited issue
on:
  issues:
    types: [opened, edited]

jobs:
  audio-to-text:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: johannlai/audio-to-text
          token: ${{ secrets.ACTIONS_SECRET }}
      - name: View issue information
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"
          echo "${{ github.event.issue.title }} ${{ github.event.issue.body }}" > issue.txt
      - uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const issueOutput = fs.readFileSync('issue.txt', 'utf8');

            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["in-progress"]
            })

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              Hi there! 👋
              Thanks for using my services! ❤️! 
              🤖 I've received your request and currently working on it.

              ⚙️ It might take a few minutes 🙏  You can check the progress [here](https://github.com/JohannLai/audio-to-text/actions/workflows/issue.yml)

              In the meantime, feel free to chat with me ! 😊
              I'll notify you as soon as I'm done! 😊

              If you find my services helpful, you can support me by buying me a coffee ☕️ 
              <a href="https://www.buymeacoffee.com/johannli" target=”_blank”>
                <img src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png" width="200">
              </a>
              `
            })
      - name: start audio-to-text
        env:
          API_KEY: ${{ secrets.API_KEY }}
          PROXY_HOST: ${{ secrets.PROXY_HOST }}
          PROXY_PORT: ${{ secrets.PROXY_PORT }}
          PROXY_HOST_C: ${{ secrets.PROXY_HOST_C }}
          PROXY_PORT_C: ${{ secrets.PROXY_PORT_C }}
          PROXY_USERNAME: ${{ secrets.PROXY_USERNAME }}
          PROXY_PASSWORD: ${{ secrets.PROXY_PASSWORD }}
        run: |
          make start_from_issue
      - name: if run failed, comment to issue
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              🙇‍♂️🙇‍♂️🙇‍♂️

              I'm sorry to inform you that I've encountered an error while processing your request. 😢

              Please try again later by reopen this issue. 🙏

              Thanks for using my services! 🤖❤️
              `
            })

            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["fail"]
            })
      - name: if run success, comment to issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              Mission accomplished! 🥳🥳🥳
              Here's the result:
              `
            })
      - uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const __dirname = path.resolve();
            const files = fs.readdirSync(path.join(__dirname, 'text_formatted'));

            files.map(file => {
                  let content = fs.readFileSync(path.join(__dirname, 'text_formatted', file), 'utf8');
                  if (!content) return;
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: content
                })
            })
      - name: end with coffee
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const __dirname = path.resolve();
            const files = fs.readdirSync(path.join(__dirname, 'text_formatted'));

            const fileName = files[1].length > 50 ? files[1].substring(0, 50) + "..." : files[1];

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              🙌

              If you find my services helpful, you can support me by buying me a coffee ☕️ 
              Thanks for using my services! ❤️
              <a href="https://www.buymeacoffee.com/johannli" target=”_blank”>
                <img src="https://cdn.buymeacoffee.com/buttons/v2/arial-yellow.png" width="200">
              </a>
              `
            })

            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "🎬 -> 📝 " + fileName
            })

            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["success"]
            })
